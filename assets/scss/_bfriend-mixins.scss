/* variables */
/* ----------------------------------------- */
	$font-pri:    '', sans-serif;

	$color-pri:     #000000;
	$color-sec:     transparent;
	$color-ter:     transparent;
  $color-qua:     transparent;

  $bf-colors: (
    pri: $color-pri,
    sec: $color-sec,
    ter: $color-ter,
    qua: $color-qua
  ) !default;
/* ----------------------------------------- variables */

/* 	classes  */
/* ----------------------------------------- */
  .font-pri  { font-family: $font-pri; }
  
  .color-pri { color: $color-pri; }
  .color-sec { color: $color-sec; }
  .color-ter { color: $color-ter; }
  .color-qua { color: $color-qua; }
/* ----------------------------------------- 	classes */

/* general mixins and functions */
/* ----------------------------------------- */
  @function bf-color($key: "pri") {
    @return map-get($bf-colors, $key);
  }

  @function bf-background($key: "pri") {
    @return map-get($bf-colors, $key);
  }

  @function bf-font($key: "first") {
    @return map-get($bf-fonts, $key);
  }

  @mixin flex($value) {
    flex: 0 0 $value;
    max-width: $value;
  }

  @mixin text-gradient($dir, $from, $to) {
    background: -webkit-linear-gradient($dir, $from, $to);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

	@mixin columns($qtd: 2) {
		@include media-breakpoint-down(sm) {
			-webkit-column-count: $qtd;
		  -moz-column-count: $qtd;
		  column-count: $qtd;
		}
	}

	@mixin cover() {
	  -webkit-background-size: cover !important;
	  -moz-background-size: cover !important;
	  -o-background-size: cover !important;
	  background-size: cover !important;
	}

	@mixin contain() {
	  -webkit-background-size: contain !important;
	  -moz-background-size: contain !important;
	  -o-background-size: contain !important;
	  background-size: contain !important;
	}

	@mixin h1() { font-size: $font-size-h1; }
	@mixin h2() { font-size: $font-size-h2; }
	@mixin h3() { font-size: $font-size-h3; }
	@mixin h4() { font-size: $font-size-h4; }
	@mixin h5() { font-size: $font-size-h5; }
	@mixin h6() { font-size: $font-size-h6; }

	@mixin thin()   	{ font-weight: 100; }
	@mixin elight()   { font-weight: 200; }
	@mixin light()  	{ font-weight: 300; }
	@mixin normal()  	{ font-weight: 400; }
	@mixin medium()   { font-weight: 500; }
	@mixin semi()    	{ font-weight: 600; }
	@mixin bold()    	{ font-weight: 700; }
	@mixin ebold()    { font-weight: 800; }
	@mixin black()   	{ font-weight: 900; }

	// Font size rem
	@function calculateRem($size) {
	  $remSize: $size / 16px;
	  @return #{$remSize}rem;
	}

	@mixin font($size) {
	  font-size: $size;
	  font-size: calculateRem($size);
	}

	@mixin radius($px) {
	  -webkit-border-radius: $px;
	  -moz-border-radius: $px;
	  -ms-border-radius: $px;
	  border-radius: $px;
  }
  
  @mixin pseudo() {
    display: block;
    content: '';
	}

	@mixin placeholder {
	  &.placeholder { @content; }
	  &:-moz-placeholder { @content; }
	  &::-moz-placeholder { @content; }
	  &::-webkit-input-placeholder { @content; }
  }

  @mixin global-animation() {
    animation-fill-mode: both;
  }
  
  
  @keyframes rotate {
    0% {
      transform: rotate(0deg) scale(1);
    }
    50% {
      transform: rotate(180deg) scale(0.6);
    }
    100% {
     transform: rotate(360deg) scale(1);
   }
  }

	@-webkit-keyframes load {
	  0%, 80%, 100% {
	    box-shadow: 0 0;
	    height: 1em;
	  } 40% {
	    box-shadow: 0 -2em;
	    height: 1.5em;
	  }
	}

	@keyframes load {
	  0%, 80%, 100% {
	    box-shadow: 0 0;
	    height: 1em;
	  } 40% {
	    box-shadow: 0 -2em;
	    height: 1.5em;
	  }
	}
/* ----------------------------------------- general mixins and functions */

/* 	custom container widths  */
/* ----------------------------------------- */
$f-xs: 100%;
$f-sm: map-get($container-max-widths, 'sm');
$f-md: map-get($container-max-widths, 'ms');
$f-lg: map-get($container-max-widths, 'lg');
$f-xl: map-get($container-max-widths, 'xl');
/* ----------------------------------------- 	custom container widths */